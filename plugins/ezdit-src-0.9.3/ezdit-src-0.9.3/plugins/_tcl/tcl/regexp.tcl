set syndb(regexp,regexp,type) "TCLCMD"
set syndb(regexp,regexp,hint) "regexp ?switches? exp string ?matchVar? ?subMatchVar subMatchVar ...?"
set syndb(regexp,regexp,arglist) [list -about -all -expanded -indices -inline -line -lineanchor -linestop -nocase -start]
set syndb(regexp,-about,type) "TCLARG"
set syndb(regexp,-about,hint)  ""
set syndb(regexp,-about,arglist)  [list] 
set syndb(regexp,-all,type) "TCLARG"
set syndb(regexp,-all,hint)  ""
set syndb(regexp,-all,arglist)  [list] 
set syndb(regexp,-expanded,type) "TCLARG"
set syndb(regexp,-expanded,hint)  ""
set syndb(regexp,-expanded,arglist)  [list] 
set syndb(regexp,-indices,type) "TCLARG"
set syndb(regexp,-indices,hint)  ""
set syndb(regexp,-indices,arglist)  [list] 
set syndb(regexp,-inline,type) "TCLARG"
set syndb(regexp,-inline,hint)  ""
set syndb(regexp,-inline,arglist)  [list] 
set syndb(regexp,-line,type) "TCLARG"
set syndb(regexp,-line,hint)  ""
set syndb(regexp,-line,arglist)  [list] 
set syndb(regexp,-lineanchor,type) "TCLARG"
set syndb(regexp,-lineanchor,hint)  ""
set syndb(regexp,-lineanchor,arglist)  [list] 
set syndb(regexp,-linestop,type) "TCLARG"
set syndb(regexp,-linestop,hint)  ""
set syndb(regexp,-linestop,arglist)  [list] 
set syndb(regexp,-nocase,type) "TCLARG"
set syndb(regexp,-nocase,hint)  ""
set syndb(regexp,-nocase,arglist)  [list] 
set syndb(regexp,-start,type) "TCLARG"
set syndb(regexp,-start,hint)  ""
set syndb(regexp,-start,arglist)  [list] 

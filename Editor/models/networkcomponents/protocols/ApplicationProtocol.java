/**
 * ApplicationProtocol.java
 * 
 * @Copyright (C) 2014, Sedic Laboratory, Hanoi University of Science and
 *            Technology
 * @Author Duc-Trong Nguyen
 * @Version 2.0
 */

package models.networkcomponents.protocols;

import java.util.List;

import models.networkcomponents.Node;
import models.networkcomponents.events.Event;
import models.networkcomponents.events.Event.EventType;

public abstract class ApplicationProtocol implements Protocol {
	
	public static enum ApplicationProtocolType { CBR, VBR, FTP, PARETO, TELNET }
	
	protected ApplicationProtocolType type;
	
	/**
	 * Constructor
	 * @param name Name of this protocol
	 * @param protocol The transport protocol in the lower layer of network protocol
	 */
	protected ApplicationProtocol(ApplicationProtocolType type) {
		this.type = type;		
	}
	
	protected	abstract void setDestNode(Node node);	
	public 		abstract Node getDestNode();
	
	/**
	 * Adds an event to the chain of events of this application protocol
	 * @param e Event will be added
	 * @return <i>true</i> if success, else <i>false</i>
	 */
	public abstract boolean addEvent(EventType type, double raisedTime);	
	public abstract boolean removeEvent(Event e);
	
	/**
	 * Gets events generated by this app
	 * @return
	 */
	public abstract List<Event> getEventList();
	
	public ApplicationProtocolType getType() { return type; }
}

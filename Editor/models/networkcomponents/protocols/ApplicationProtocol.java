package models.networkcomponents.protocols;

import java.util.ArrayList;
import java.util.List;

import models.networkcomponents.Node;
import models.networkcomponents.events.AppEvent;

public class ApplicationProtocol extends Protocol {
	public final static int CBR = 0, VBR = 1, FTP = 2, PARETO = 3, TELNET = 4;
	
	// the transport protocol which this protocol bases on
	TransportProtocol transportProtocol;
	
	// list of events on this application protocol
	List<AppEvent> eventList;
	
	// the destination node
	Node destNode;
	
	int type; 

	/**
	 * Constructor
	 * @param name Name of this protocol
	 * @param protocol The transport protocol in the lower layer of network protocol
	 */
	public ApplicationProtocol(int type, String name, TransportProtocol protocol, Node destNode) {
		super(name);
		
		this.transportProtocol = protocol;
		protocol.addApp(this);
		eventList = new ArrayList<AppEvent>();
		this.type = type;
		this.destNode = destNode;
	}

	/**
	 * Adds an event to the chain of events of this application protocol
	 * @param e Event will be added
	 * @return <i>true</i> if success, else <i>false</i>
	 */
	public boolean addEvent(AppEvent e) {
		//TODO add events chronologically 
		
		if (!eventList.contains(e)) {
			eventList.add(e);
			return true;
		}
		
		return false;
	}
	
	public boolean removeEvent(AppEvent e) {
		if (eventList.contains(e)) {
			eventList.remove(e);
			return true;
		}
		
		return false;
	}
	
	/**
	 * Gets events generated by this app
	 * @return
	 */
	public List<AppEvent> getEventList() { return eventList; }
	
	public int getType() { return type; }
	
	public Node getDestNode() { return destNode; }
}
